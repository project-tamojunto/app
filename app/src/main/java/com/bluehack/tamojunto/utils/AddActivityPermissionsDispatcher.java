// This file was generated by PermissionsDispatcher. Do not modify!
package com.bluehack.tamojunto.utils;

import android.content.Intent;
import android.support.v4.app.ActivityCompat;

import com.bluehack.tamojunto.MainActivity;

import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import permissions.dispatcher.GrantableRequest;
import permissions.dispatcher.PermissionUtils;

public class AddActivityPermissionsDispatcher {
  private static final int REQUEST_SAVE = 0;

  private static final String[] PERMISSION_SAVE = new String[] {"android.permission.WRITE_EXTERNAL_STORAGE"};

  private static GrantableRequest PENDING_SAVE;

  private static final int REQUEST_TAKEPHOTO = 1;

  private static final String[] PERMISSION_TAKEPHOTO = new String[] {"android.permission.CAMERA"};

  private static final int REQUEST_GETLATLNG = 2;

  private static final String[] PERMISSION_GETLATLNG = new String[] {"android.permission.ACCESS_FINE_LOCATION"};


  static void getLatLngWithCheck(MainActivity target) {
    if (PermissionUtils.hasSelfPermissions(target, PERMISSION_GETLATLNG)) {
      target.getLatLng();
    } else {
      ActivityCompat.requestPermissions(target, PERMISSION_GETLATLNG, REQUEST_GETLATLNG);
    }
  }

  static void onRequestPermissionsResult(MainActivity target, int requestCode, int[] grantResults) {
    switch (requestCode) {
      case REQUEST_SAVE:
      if (PermissionUtils.getTargetSdkVersion(target) < 23 && !PermissionUtils.hasSelfPermissions(target, PERMISSION_SAVE)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        if (PENDING_SAVE != null) {
          PENDING_SAVE.grant();
        }
      }
      PENDING_SAVE = null;
      break;
      case REQUEST_TAKEPHOTO:
      if (PermissionUtils.getTargetSdkVersion(target) < 23 && !PermissionUtils.hasSelfPermissions(target, PERMISSION_TAKEPHOTO)) {
        return;
      }
      break;
      case REQUEST_GETLATLNG:
      if (PermissionUtils.getTargetSdkVersion(target) < 23 && !PermissionUtils.hasSelfPermissions(target, PERMISSION_GETLATLNG)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.getLatLng();
      }
      break;
      default:
      break;
    }
  }

  }


